# Generated by Django 3.1.1 on 2020-11-12 14:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pegasus.models.role
import pegasus.models.scope
import pegasus.models.tenant
import pegasus.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=pegasus.models.user._default_user_id, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=320, unique=True)),
                ('password', models.CharField(max_length=144, verbose_name='password')),
                ('status', models.CharField(choices=[('active', 'Active'), ('terminated', 'Terminated')], default='active', max_length=16)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', pegasus.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.CharField(default=pegasus.models.role._default_group_id, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=56)),
                ('is_default_role', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('id', models.CharField(default=pegasus.models.scope._default_scope_id, editable=False, max_length=32, primary_key=True, serialize=False)),
                ('service', models.CharField(db_index=True, max_length=24)),
                ('resource', models.CharField(max_length=24)),
                ('action', models.CharField(max_length=48)),
                ('selector', models.CharField(blank=True, max_length=32, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.CharField(default=pegasus.models.tenant._default_tenant_id, editable=False, max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=48, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.CharField(default=pegasus.models.user._default_user_token_id, editable=False, max_length=128, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('user', 'User Token')], max_length=16)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tokens', to='pegasus.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRoleRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pegasus.role')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pegasus.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccessToken',
            fields=[
                ('id', models.CharField(default=pegasus.models.user._default_user_accesstoken_id, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('token', models.CharField(db_index=True, default=pegasus.models.user._default_user_accesstoken_token, editable=False, max_length=128, unique=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('scopes', models.ManyToManyField(related_name='user_access_tokens', to='pegasus.Scope')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_access_tokens', to='pegasus.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='scope',
            index=models.Index(fields=['service', 'resource', 'action'], name='pegasus_sco_service_f0db87_idx'),
        ),
        migrations.AddIndex(
            model_name='scope',
            index=models.Index(fields=['service', 'resource', 'action', 'selector'], name='pegasus_sco_service_b0b5d3_idx'),
        ),
        migrations.AddConstraint(
            model_name='scope',
            constraint=models.UniqueConstraint(fields=('service', 'resource', 'action', 'selector'), name='scope_keys_unique'),
        ),
        migrations.AddField(
            model_name='role',
            name='included_roles',
            field=models.ManyToManyField(blank=True, related_name='_role_included_roles_+', to='pegasus.Role'),
        ),
        migrations.AddField(
            model_name='role',
            name='scopes',
            field=models.ManyToManyField(blank=True, related_name='roles', to='pegasus.Scope'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='users', through='pegasus.UserRoleRelation', to='pegasus.Role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]

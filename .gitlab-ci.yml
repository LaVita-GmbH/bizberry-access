image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:20.10.3

stages:
  - build
  - deploy  # dummy stage to follow the template guidelines
  - review
  - dast
  - staging
  - staging_finish
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - cleanup
  - finish

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
  REF_NAME: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
  CI_APPLICATION_TAG: $CI_COMMIT_SHA
  K8S_SECRET_SENTRY_ENVIRONMENT: $CI_ENVIRONMENT_SLUG

.docker_preset: &docker_preset
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:20.10.3-dind
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  <<: *docker_preset
  stage: build
  interruptible: true
  script:
    - docker build --pull -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
    - docker tag $IMAGE_NAME $REF_NAME
    - docker push $REF_NAME
  only:
    - master
    - develop
    - tags

include:
  - template: Jobs/Deploy.latest.gitlab-ci.yml


sentry_release_new:
  stage: build
  image: getsentry/sentry-cli:latest
  allow_failure: true
  only:
    - master
  script:
    - export VERSION=${CI_COMMIT_REF_NAME}
    - export REF=`sentry-cli releases propose-version`
    - sentry-cli releases --org $SENTRY_ORG new --project $CI_PROJECT_NAME $REF
    - sentry-cli releases --org $SENTRY_ORG set-commits --auto $REF

.sentry_release_finish: &sentry_release_finish
  image: getsentry/sentry-cli:latest
  allow_failure: true
  only:
    - master
  script:
    - export VERSION=${CI_COMMIT_REF_NAME}
    - export REF=`sentry-cli releases propose-version`
    - sentry-cli releases --org $SENTRY_ORG deploys $REF new --env $CI_ENVIRONMENT_SLUG --name $VERSION


sentry_release_finish_staging:
  <<: *sentry_release_finish
  stage: staging_finish
  variables:
    CI_ENVIRONMENT_SLUG: staging

sentry_release_finish_production:
  <<: *sentry_release_finish
  stage: finish
  variables:
    CI_ENVIRONMENT_SLUG: production
